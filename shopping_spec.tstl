# ShoppingCart TSTL Harness

# Import the ShoppingCart class
<: import shopping_cart.ShoppingCart :>

# Define the pool of objects
pool: ShoppingCart 1

# Initialize the ShoppingCart object
init: s = ShoppingCart()

# Define actions
[action]
s.add(<str:item>)
{precondition: item not in [items["item"] for item in s.items]}
{postcondition: any(items["item"] == item for item in s.items)}

[action]
s.remove_item(<str:item>)
{precondition: item in [items["item"] for item in s.items]}
{postcondition: not any(items["item"] == item for item in s.items)}

[action]
items[] = s.get_items()
{precondition: items in [items["items"] for item in s.items]}
{postcondition: items[] == all(items["item"] for item in s.items)}

[action]
items[] = s.clear()
{precondition: items in [items["items"] for item in s.items]}
{postcondition: items[] == any(items["item"] == [] for item in s.items)}

[action]
size = s.size()
{precondition: items in [items["item"] for item in s.items]}
{postcondition: any(size of items[] == 0 )}
